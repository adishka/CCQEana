#include "services_microboone.fcl"
#include "time_memory_tracker_microboone.fcl"
#include "seedservice_microboone.fcl"

process_name: GenieEventWeight

services:
{
    scheduler:               { defaultExceptions: false }    # Make all uncaught exceptions fatal.
    TFileService:            { fileName: "genie_reweight_hist.root" }
    TimeTracker:             @local::microboone_time_tracker
    MemoryTracker:           @local::microboone_memory_tracker
    RandomNumberGenerator:   {} #ART native random number generator
    message:                 @local::microboone_message_services_prod_debug
    FileCatalogMetadata:     @local::art_file_catalog_mc
    @table::microboone_simulation_services
}

services.DetectorPropertiesService.NumberTimeSamples:        6400
services.DetectorPropertiesService.ReadOutWindowSize:        6400
services.DetectorClocksService.InheritClockConfig:           false
services.DetectorClocksService.TriggerOffsetTPC:             -0.400e3

source:
{
    module_type: RootInput
    maxEvents:   -1        # Number of events to create
}


genie_microboone_eventweight:
{
    module_type:	"EventWeight"

    # Ma +/- N(sigma) for CCQE-like analysis
    # Ref. [https://arxiv.org/pdf/1510.05494.pdf] states that
    # mA = 0.990 - 15% + 25% = 0.99 - 0.1485 + 0.2475 = (0.8415 -> 1.2375) GeV/c2
    # this means that
    # mA + 1.4545\sigma = 0.99 + 1.4545*0.2475 = 1.35
    # mA + 2.909\sigma = 0.99 + 2.909*0.2475 = 1.71
    # mA - 2.289\sigma = 0.99 - 1.952*0.1485 = 0.7
    # mA + 2.289\sigma = 0.99 - 2.289*0.1485 = 0.4

    weight_functions: [ evwgh_mA099,evwgh_mA135, evwgh_mA171, evwgh_mA070, evwgh_mA040 ]

    # throw exception if weight outside limits
    min_weight: 0
    max_weight: 100

    genie_module_label:    generator



    evwgh_mA099 : {
        type: Genie
        random_seed: 1
        parameter_list:        ["QEMA"]
        parameter_sigma:       [-0.0001] # corresponds to Ma = 0.99 GeV
        mode: reweight
        number_of_multisims:    1
    }

    evwgh_mA135 : {
        type: Genie
        random_seed: 1
        parameter_list:        ["QEMA"]
        parameter_sigma:       [1.4545] # corresponds to Ma = 1.35 GeV
        mode: reweight
        number_of_multisims:    1
    }

    evwgh_mA171 : {
        type: Genie
        random_seed: 1
        parameter_list:        ["QEMA"]
        parameter_sigma:       [2.909] # corresponds to Ma = 1.71 GeV
        mode: reweight
        number_of_multisims:    1
    }


    evwgh_mA070 : {
        type: Genie
        random_seed: 1
        parameter_list:        ["QEMA"]
        parameter_sigma:       [-1.952] # corresponds to Ma = 0.7 GeV
        mode: reweight
        number_of_multisims:    1
    }

    evwgh_mA040 : {
        type: Genie
        random_seed: 1
        parameter_list:        ["QEMA"]
        parameter_sigma:       [-2.289] # corresponds to Ma = 0.4 GeV
        mode: reweight
        number_of_multisims:    1
    }


}

physics:
{
    producers:{
        genieeventweight:    @local::genie_microboone_eventweight
        rns:                 { module_type: "RandomNumberSaver" }
    }
    stream1:  [ out1 ]
    simulate: [ rns, genieeventweight ]
    ana:      [ ]
    trigger_paths: [simulate]
    end_paths:     [stream1,ana]
}

outputs.out1.fileName: "%ifb_%tc_reco1.root"
outputs:
{
    out1:
    {
        module_type: RootOutput
        fileName:    "%ifb_reweighted_mA.root"    # default, can override using -o or --output
        dataTier:    "reconstructed"
        compressionLevel: 1
    }
}
