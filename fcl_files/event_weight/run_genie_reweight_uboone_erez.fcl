#include "services_microboone.fcl"
#include "time_memory_tracker_microboone.fcl"
#include "seedservice_microboone.fcl"

process_name: GenieEventWeight

services:
{
    scheduler:               { defaultExceptions: false }    # Make all uncaught exceptions fatal.
    TFileService:            { fileName: "genie_reweight_hist.root" }
    TimeTracker:             @local::microboone_time_tracker
    MemoryTracker:           @local::microboone_memory_tracker
    RandomNumberGenerator:   {} #ART native random number generator
    message:                 @local::microboone_message_services_prod_debug
    FileCatalogMetadata:     @local::art_file_catalog_mc
    @table::microboone_simulation_services
}

services.DetectorPropertiesService.NumberTimeSamples:        6400
services.DetectorPropertiesService.ReadOutWindowSize:        6400
services.DetectorClocksService.InheritClockConfig:           false
services.DetectorClocksService.TriggerOffsetTPC:             -0.400e3

source:
{
    module_type: RootInput
    maxEvents:   -1        # Number of events to create
}

source.inputCommands: ["keep *_*_*_*", "drop sumdata::RunData_*_*_*" ]

genie_microboone_eventweight:
{
    module_type:	"EventWeight"

    # Ma +/- N(sigma) for CCQE-like analysis
    # Ref. [https://arxiv.org/pdf/1510.05494.pdf] states that
    # mA = 0.990 - 15% + 25% = 0.99 - 0.1485 + 0.2475 = (0.8415 -> 1.2375) GeV/c2
    
    # x\sigma = (mA (>0.99) - 0.99)/0.2475
    # x\sigma = (0.99 - mA (<0.99))/0.1485
    
    # this means that
    # mA + 1.4545\sigma = 0.99 + 1.4545*0.2475 = 1.35
    # mA - 1.952\sigma = 0.99 - 1.952*0.1485 = 0.7
    
    weight_functions: [ evwgh_mA99
                       , evwgh_mA40, evwgh_mA55, evwgh_mA65, evwgh_mA70, evwgh_mA75
                       , evwgh_mA80, evwgh_mA85, evwgh_mA90, evwgh_mA95, evwgh_mA100
                       , evwgh_mA105, evwgh_mA110, evwgh_mA115, evwgh_mA120, evwgh_mA130
                       , evwgh_mA135, evwgh_mA150, evwgh_mA160, evwgh_mA170
                       ]

    # throw exception if weight outside limits
    min_weight: 0
    max_weight: 100

    genie_module_label:    generator



    evwgh_mA99 : {
        type: Genie
        random_seed: 1
        parameter_list:        ["QEMA"]
        parameter_sigma:       [-0.0001] # corresponds to Ma = 0.99 GeV
        mode: reweight
        number_of_multisims:    1
    }
    
    
    evwgh_mA40 : {
    type: Genie
    random_seed: 1
    parameter_list:        ["QEMA"]
    parameter_sigma:       [-3.973] # corresponds to Ma = 0.4 GeV
    mode: reweight
    number_of_multisims:    1
    }
    evwgh_mA55 : {
    type: Genie
    random_seed: 1
    parameter_list:        ["QEMA"]
    parameter_sigma:       [-2.9629] # corresponds to Ma = 0.75 GeV
    mode: reweight
    number_of_multisims:    1
    }
    evwgh_mA65 : {
    type: Genie
    random_seed: 1
    parameter_list:        ["QEMA"]
    parameter_sigma:       [-2.289] # corresponds to Ma = 0.65 GeV
    mode: reweight
    number_of_multisims:    1
    }
    
    
    evwgh_mA70 : {
    type: Genie
    random_seed: 1
    parameter_list:        ["QEMA"]
    parameter_sigma:       [-1.952] # corresponds to Ma = 0.7 GeV
    mode: reweight
    number_of_multisims:    1
    }
    
    
    
    evwgh_mA75 : {
    type: Genie
    random_seed: 1
    parameter_list:        ["QEMA"]
    parameter_sigma:       [-1.6161] # corresponds to Ma = 0.75 GeV
    mode: reweight
    number_of_multisims:    1
    }

    evwgh_mA80 : {
    type: Genie
    random_seed: 1
    parameter_list:        ["QEMA"]
    parameter_sigma:       [-1.279] # corresponds to Ma = 0.80 GeV
    mode: reweight
    number_of_multisims:    1
    }
    
    evwgh_mA85 : {
    type: Genie
    random_seed: 1
    parameter_list:        ["QEMA"]
    parameter_sigma:       [-0.9427] # corresponds to Ma = 0.85 GeV
    mode: reweight
    number_of_multisims:    1
    }
    
    evwgh_mA90 : {
    type: Genie
    random_seed: 1
    parameter_list:        ["QEMA"]
    parameter_sigma:       [-0.6060] # corresponds to Ma = 0.90 GeV
    mode: reweight
    number_of_multisims:    1
    }
    
    evwgh_mA95 : {
    type: Genie
    random_seed: 1
    parameter_list:        ["QEMA"]
    parameter_sigma:       [-0.2693] # corresponds to Ma = 0.95 GeV
    mode: reweight
    number_of_multisims:    1
    }
    
    evwgh_mA100 : {
    type: Genie
    random_seed: 1
    parameter_list:        ["QEMA"]
    parameter_sigma:       [0.0404] # corresponds to Ma = 1.0 GeV
    mode: reweight
    number_of_multisims:    1
    }
    
    evwgh_mA105 : {
    type: Genie
    random_seed: 1
    parameter_list:        ["QEMA"]
    parameter_sigma:       [0.2424] # corresponds to Ma = 1.05 GeV
    mode: reweight
    number_of_multisims:    1
    }
    
    evwgh_mA110 : {
    type: Genie
    random_seed: 1
    parameter_list:        ["QEMA"]
    parameter_sigma:       [0.4444] # corresponds to Ma = 1.10 GeV
    mode: reweight
    number_of_multisims:    1
    }
    
    evwgh_mA115 : {
    type: Genie
    random_seed: 1
    parameter_list:        ["QEMA"]
    parameter_sigma:       [0.6464] # corresponds to Ma = 1.15 GeV
    mode: reweight
    number_of_multisims:    1
    }
    
    evwgh_mA120 : {
    type: Genie
    random_seed: 1
    parameter_list:        ["QEMA"]
    parameter_sigma:       [0.8484] # corresponds to Ma = 1.2 GeV
    mode: reweight
    number_of_multisims:    1
    }
    
    
    evwgh_mA130 : {
    type: Genie
    random_seed: 1
    parameter_list:        ["QEMA"]
    parameter_sigma:       [1.25252] # corresponds to Ma = 1.3 GeV
    mode: reweight
    number_of_multisims:    1
    }

    evwgh_mA135 : {
        type: Genie
        random_seed: 1
        parameter_list:        ["QEMA"]
        parameter_sigma:       [1.4545] # corresponds to Ma = 1.35 GeV
        mode: reweight
        number_of_multisims:    1
    }

    evwgh_mA150 : {
    type: Genie
    random_seed: 1
    parameter_list:        ["QEMA"]
    parameter_sigma:       [2.0606] # corresponds to Ma = 1.5 GeV
    mode: reweight
    number_of_multisims:    1
    }
    
    evwgh_mA160 : {
    type: Genie
    random_seed: 1
    parameter_list:        ["QEMA"]
    parameter_sigma:       [2.46464] # corresponds to Ma = 1.6 GeV
    mode: reweight
    number_of_multisims:    1
    }
    
    
    evwgh_mA170 : {
        type: Genie
        random_seed: 1
        parameter_list:        ["QEMA"]
        parameter_sigma:       [2.86868] # corresponds to Ma = 1.70 GeV
        mode: reweight
        number_of_multisims:    1
    }

    

}

physics:
{
    producers:{
        genieeventweight:    @local::genie_microboone_eventweight
        rns:                 { module_type: "RandomNumberSaver" }
    }
    stream1:  [ out1 ]
    simulate: [ rns, genieeventweight ]
    ana:      [ ]
    trigger_paths: [simulate]
    end_paths:     [stream1,ana]
}

outputs.out1.fileName: "%ifb_%tc_reco1.root"
outputs:
{
    out1:
    {
        module_type: RootOutput
        fileName:    "%ifb_reweighted_mA_slimmed.root"    # default, can override using -o or --output
        dataTier:    "reconstructed"
        compressionLevel: 1
        outputCommands: [
                            "keep *_*_*_*",
                            "drop raw::*_*_*_*",
                            "drop art::*_*_*_*",
                            "drop sim::*_*_*_*",
                         "drop sumdata::RunData_*_*_*",
                            "drop recob::Cluster_*_*_*",
                            "drop recob::EndPoint2D_*_*_*",
                            "drop recob::Vertex_*_*_*",
                            "drop recob::Wires_*_*_*",
                            "drop recob::PFParticle_*_*_*",
                            "drop recob::Wire_*_*_*",
                            "drop recob::SpacePoint_*_*_*",
                            "drop recob::SpacePoints_pandoraCosmic_*_DataRecoStage2",
                            "drop recob::SpacePoints_*_*_DataRecoStage2",
                            "drop recob::Hits_trajcluster_*_DataRecoStage2",
                            "drop recob::Seeds_*_*_DataRecoStage2",
                            "drop recob::*_*_*_SpacePoint",
                            "drop recob::Seed_*_*_*",
                            "drop recob::Shower_*_*_*",
                            "drop recob::*_*_pandoraCosmic_*",
                            "drop *_*_pandoraCosmic_*",
                            "drop recob::*_*_pandoraCosmic_DataRecoStage2",
                            "drop *_*_*_McRecoAprStage1",
                            "drop *_*_*_DataRecoAprStage1",
                            "drop *_*_*_DetsimNoNoise",
                            "drop *_*_*_Swizzler",
                            #"drop *_*_*_OverlayStage1a",
                            #"keep *_*_simpleFlashBeam_OverlayStage1a",
                            "drop *_*_*_DetSim",
                            "drop *_*_pmtrack_*",
                            "drop *_*_trajcluster_*",
                            "drop *_*_pandoraNuPMA_*",
                            "drop *_*_pandoraNuKalmanTrackFlashMatch_*",
                            "drop *_*_pandoraCosmicT0RecoBeam_*",
                            "drop *_*_pandoraCosmicKHitpid_*",
                            "drop *_*_pandoraCosmicKHit_*",
                            "drop *_*_pandoraCosmicKHitFlashMatch_*",
                            "drop *_*_pmtrackcalo_*"
                            ]
    }
}






services.message.destinations :
{
    STDCOUT:
    {
        type:      "cout"      #tells the message service to output this destination to cout
        threshold: "WARNING"   #tells the message service that this destination applies to WARNING and higher level messages
        append:     true       #says to append all messages to the output
        categories:
        {
            ChannelFilter:
            {
                limit: 0
                reportEvery: 0
            }
            default:
            {
                limit: -1  #don't print anything at the infomsg level except the explicitly named categories
                reportEvery: 1
            }
        }
    }
}



